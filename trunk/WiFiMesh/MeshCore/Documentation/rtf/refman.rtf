{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\comment Begining font list}
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\comment begin colors}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\comment Beginning style list}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment MeshCore {\comment startProjectNumber }
 {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}{\comment endProjectNumber }
}MeshCore}
{\comment Generated byDoxgyen. }
{\creatim \yr2009\mo1\dy2\hr16\min15\sec16}
}{\comment end of infoblock}
\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
{\comment begin title page}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page{\comment End title page}
{\comment Table of contents}
\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
{\comment Beginning Body of RTF Document}
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

{\comment BeginRTFChapter}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_thick)}
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
{\comment begin include annotated.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures{\comment endTitleHead}
\par \pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:{\comment endTextBlock}
}
{\comment (startIndexList)}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\comment (startIndexKey)}
{\b {\b Message}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} declaration }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIC \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Vector}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Location and Velocity vector declarations }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAID \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (endIndexList)}
\par}{\comment endFile}
{\comment end include annotated.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_thick)}
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
{\comment begin include files.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List{\comment endTitleHead}
\par \pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:{\comment endTextBlock}
}
{\comment (startIndexList)}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\comment (startIndexKey)}
{\b {\b CommonTypes.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Event.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Event.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b List.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Macros.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Message.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Queue.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Routing.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Routing.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Scheduler.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Scheduler.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Settings.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Settings.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Simulator.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Simulator.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b SortedList.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b SortedList.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Station.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Status.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b TimeLine.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (endIndexList)}
\par}{\comment endFile}
{\comment end include files.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_thick)}
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
{\comment begin include struct_message.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message Struct Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Message}
{\xe \v Message}
{\comment writeAnchor (struct_message)}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} declaration. \par
}{\f2 #include <Message.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

{\b EMessageType} {\b type}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} type. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

{\b StationId} {\b originalSrcId}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Original source station id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

{\b StationId} {\b originalDstId}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Original destination station id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

{\b StationId} {\b transitSrcId}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transit source id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

{\b StationId} {\b transitDstId}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transit destination id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

unsigned {\b nodesCount}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transit nodes counts. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

unsigned long {\b size}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data size {\i (for data packets only)} . \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} declaration. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Message.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include struct_message.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include struct_vector.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vector Struct Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Vector}
{\xe \v Vector}
{\comment writeAnchor (struct_vector)}
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Location and Velocity vector declarations. \par
}{\f2 #include <CommonTypes.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

double {\b x}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\i x}  component \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

double {\b y}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\i y}  component \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Location and Velocity vector declarations. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CommonTypes.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include struct_vector.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_thick)}
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
{\comment begin include _common_types_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CommonTypes.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v CommonTypes.h}
{\xe \v CommonTypes.h}
{\comment writeAnchor (_common_types_8h)}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Vector}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Location and Velocity vector declarations. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

#define {\b INVALID_STATION_ID}\~ (({\b StationId})-2){\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-existing station id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

#define {\b BROADCAST_STATION_ID}\~ (({\b StationId})-1){\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Broadcast station id. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef {\b Vector} {\b Location}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Location vector declaration. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef {\b Vector} {\b Velocity}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Velocity vector declaration. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef unsigned long {\b StationId}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Station id. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common data type declarations\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 13/12/2008 \par
}}{\comment endTextBlock}
}
{\comment endFile}
{\comment end include _common_types_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _event_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Event.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Event.c}
{\xe \v Event.c}
{\comment writeAnchor (_event_8c)}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Event.h"}{\comment (lineBreak)}
\par
{\f2 #include "List.h"}{\comment (lineBreak)}
\par
{\f2 #include "Macros.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventNew} (Event **ppThis, double time, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventDelete} (Event **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventInit} (Event *pThis, double time, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventDestroy} (Event *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 17/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventDelete\:Event.c}
{\xe \v Event.c\:EventDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventDelete ({\comment (startParameterList)}
Event ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates and instance of Event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventDestroy\:Event.c}
{\xe \v Event.c\:EventDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventDestroy ({\comment (startParameterList)}
Event * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventInit\:Event.c}
{\xe \v Event.c\:EventInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventInit ({\comment (startParameterList)}
Event * {\i pThis}, {\comment (startParameterList)}
  double {\i time}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
{\i time} [in] event time \par
{\i pMessage} [in] pointer to a message associated with an event \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Message} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventNew\:Event.c}
{\xe \v Event.c\:EventNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventNew ({\comment (startParameterList)}
Event ** {\i ppThis}, {\comment (startParameterList)}
  double {\i time}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes an event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i time} [in] event time \par
{\i pMessage} [in] pointer to a message associated with an event \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Message} \par
}}}
{\comment endFile}
{\comment end include _event_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _event_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Event.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Event.h}
{\xe \v Event.h}
{\comment writeAnchor (_event_8h)}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Message.h"}{\comment (lineBreak)}
\par
{\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventNew} (Event **ppThis, double time, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventDelete} (Event **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventInit} (Event *pThis, double time, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b EventDestroy} (Event *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event module\par
Represents a single Event\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventDelete\:Event.h}
{\xe \v Event.h\:EventDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventDelete ({\comment (startParameterList)}
Event ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates and instance of Event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventDestroy\:Event.h}
{\xe \v Event.h\:EventDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventDestroy ({\comment (startParameterList)}
Event * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventInit\:Event.h}
{\xe \v Event.h\:EventInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventInit ({\comment (startParameterList)}
Event * {\i pThis}, {\comment (startParameterList)}
  double {\i time}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
{\i time} [in] event time \par
{\i pMessage} [in] pointer to a message associated with an event \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Message} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EventNew\:Event.h}
{\xe \v Event.h\:EventNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} EventNew ({\comment (startParameterList)}
Event ** {\i ppThis}, {\comment (startParameterList)}
  double {\i time}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes an event {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i time} [in] event time \par
{\i pMessage} [in] pointer to a message associated with an event \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Message} \par
}}}
{\comment endFile}
{\comment end include _event_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _list_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
List.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v List.h}
{\xe \v List.h}
{\comment writeAnchor (_list_8h)}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "CommonTypes.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _ListEntry {\b ListEntry}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration of _ListItem (declared in List.c) \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _List {\b List}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration of _List (declared in List.c) \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef Comparison(* {\b ItemComparator} )(const void *pValueLeft, const void *pValueRight, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef Boolean(* {\b ItemFilter} )(void *pValue, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef Boolean(* {\b ItemEnumerator} )(const void *pValue, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListNew} ({\b List} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListDelete} ({\b List} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListInit} ({\b List} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListDestroy} ({\b List} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListGetCount} ({\b List} *pThis, unsigned *pCount){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListInsert} ({\b List} *pThis, void *pValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListInsertAfter} ({\b List} *pThis, {\b ListEntry} *pEntry, void *pValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListInsertBefore} ({\b List} *pThis, {\b ListEntry} *pEntry, void *pValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListRemove} ({\b List} *pThis, {\b ListEntry} *pEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListGetHead} ({\b List} *pThis, {\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListGetTail} ({\b List} *pThis, {\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListGetNext} ({\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListGetPrevious} ({\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListGetValue} ({\b ListEntry} *pEntry, void **ppValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListFind} ({\b List} *pThis, {\b ListEntry} **ppEntry, {\b ItemComparator} comparator, const void *pValue, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListCleanUp} ({\b List} *pThis, {\b ItemFilter} filter, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b ListEnumerate} ({\b List} *pThis, {\b ItemEnumerator} enumerator, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linked List module\par
Represents generic linked list data structure allows to insert, remove and look for items\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b Queue.h}, {\b SortedList.h}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ItemComparator\:List.h}
{\xe \v List.h\:ItemComparator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef Comparison(* {\b ItemComparator})(const void *pValueLeft, const void *pValueRight, void *pUserArg){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares between 2 values {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pValueLeft} [in] pointer to first item \par
{\i pValueRight} [in] pointer to second item \par
{\i pUserArg} [in] user defined argument \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid value indicates relationship between items \par
LESS if *pValueLeft < *pValueRight \par
EQUAL if *pValueLeft == *pValueRight \par
GREAT if *pValueLeft > *pValueRight \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b ListFind} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ItemEnumerator\:List.h}
{\xe \v List.h\:ItemEnumerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef Boolean(* {\b ItemEnumerator})(const void *pValue, void *pUserArg){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used for items enumeration {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pValue} [in] pointer to value \par
{\i pUserArg} [in] user defined argument \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if an enumeration should be continued \par
FALSE if an enumeration should be stopped \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b ListEnumerate} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ItemFilter\:List.h}
{\xe \v List.h\:ItemFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef Boolean(* {\b ItemFilter})(void *pValue, void *pUserArg){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decides whether to leave to remove an item from list {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pValue} [in] pointer to value \par
{\i pUserArg} [in] user defined argument \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if an item should be leaved \par
FALSE if an item should be removed \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b ListCleanUp} \par
}}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListCleanUp\:List.h}
{\xe \v List.h\:ListCleanUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListCleanUp ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ItemFilter} {\i filter}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cleans a list according to filter function {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i filter} [in] pointer to item filter function \par
{\i pUserArg} [in] user defined argument of filter function \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b ItemFilter} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListDelete\:List.h}
{\xe \v List.h\:ListDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListDelete ({\comment (startParameterList)}
{\b List} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deallocates & destroys List instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListDestroy\:List.h}
{\xe \v List.h\:ListDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListDestroy ({\comment (startParameterList)}
{\b List} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes an instance without deallocating {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListEnumerate\:List.h}
{\xe \v List.h\:ListEnumerate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListEnumerate ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ItemEnumerator} {\i enumerator}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cleans a list according to filter function {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i enumerator} [in] pointer to item enumerator function \par
{\i pUserArg} [in] user defined argument of filter function \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b ItemEnumerator} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListFind\:List.h}
{\xe \v List.h\:ListFind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListFind ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}, {\comment (startParameterList)}
  {\b ItemComparator} {\i comparator}, {\comment (startParameterList)}
  const void * {\i pValue}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Looks for an item in a list {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] found item position will be stored at *ppEntry \par
{\i comparator} [in] pointer to item comparator function \par
{\i pValue} [in] item to look for (pValueRight argument of ItemComparator) \par
{\i pUserArg} [in] user defined argument of comparator function \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b ItemComparator} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListGetCount\:List.h}
{\xe \v List.h\:ListGetCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListGetCount ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  unsigned * {\i pCount}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets items count {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pCount} [out] pointer to count \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListGetHead\:List.h}
{\xe \v List.h\:ListGetHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListGetHead ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\i head}  position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] head position will be stored at *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListGetNext\:List.h}
{\xe \v List.h\:ListGetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListGetNext ({\comment (startParameterList)}
{\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\i next}  to specified position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppEntry} [in, out] *ppEntry will be initialized with position next to *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListGetPrevious\:List.h}
{\xe \v List.h\:ListGetPrevious}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListGetPrevious ({\comment (startParameterList)}
{\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\i previous}  to specified position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppEntry} [in, out] *ppEntry will be initialized with position previous to *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListGetTail\:List.h}
{\xe \v List.h\:ListGetTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListGetTail ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a {\i tail}  position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] tail position will be stored at *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListGetValue\:List.h}
{\xe \v List.h\:ListGetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListGetValue ({\comment (startParameterList)}
{\b ListEntry} * {\i pEntry}, {\comment (startParameterList)}
  void ** {\i ppValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value of specified position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pEntry} [in] position in a list \par
{\i ppValue} [out] *ppValue will be initialized with a pointer to value \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListInit\:List.h}
{\xe \v List.h\:ListInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListInit ({\comment (startParameterList)}
{\b List} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes previously allocated instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListInsert\:List.h}
{\xe \v List.h\:ListInsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListInsert ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  void * {\i pValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inserts new item to the tail {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pValue} [in] pointer to abstract value \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListInsertAfter\:List.h}
{\xe \v List.h\:ListInsertAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListInsertAfter ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} * {\i pEntry}, {\comment (startParameterList)}
  void * {\i pValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inserts new item {\i after}  specified position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pEntry} [in] points to position in the list \par
{\i pValue} [in] pointer to abstract value \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListInsertBefore\:List.h}
{\xe \v List.h\:ListInsertBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListInsertBefore ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} * {\i pEntry}, {\comment (startParameterList)}
  void * {\i pValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inserts new item {\i before}  specified position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pEntry} [in] points to position in the list \par
{\i pValue} [in] pointer to abstract value \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListNew\:List.h}
{\xe \v List.h\:ListNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListNew ({\comment (startParameterList)}
{\b List} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates & initializes new List instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be placed at *ppThis \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ListRemove\:List.h}
{\xe \v List.h\:ListRemove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} ListRemove ({\comment (startParameterList)}
{\b List} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} * {\i pEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an item from specified position {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pEntry} [in] points to position of an item to be removed \par
}
}}
{\comment endFile}
{\comment end include _list_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _macros_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Macros.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Macros.h}
{\xe \v Macros.h}
{\comment writeAnchor (_macros_8h)}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <malloc.h>}{\comment (lineBreak)}
\par
{\f2 #include <stdlib.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SAFE_OPERATION}(operation)\~ do \{operation;\} while (0){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ROUND}(val)\~ (long)((val) + 0.5){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VALIDATE}(condition, error)\~ SAFE_OPERATION(if (!(condition)) return (error)){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VALIDATE_ARGUMENTS}(condition)\~ VALIDATE(condition, eSTATUS_COMMON_INVALID_ARGUMENT){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLEAR}(var)\~ SAFE_OPERATION(memset(var, 0, sizeof(*var))){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLEAR_ARRAY}(var, size)\~ SAFE_OPERATION(memset(var, 0, sizeof(var[0]) * ARRAY_SIZE(size))){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NEW}(type)\~ (type*)(malloc(sizeof(type))){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NEW_ARRAY}(type, size)\~ (type*)(malloc(ARRAY_BYTE_SIZE(type, size))){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DELETE}(ptr)\~ SAFE_OPERATION(free(ptr); ptr = NULL){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK}(rc)\~ SAFE_OPERATION(if ((s_lastStatus = rc) != eSTATUS_COMMON_OK) return (s_lastStatus)){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NCHECK}(rc)\~ SAFE_OPERATION(if ((rc) == eSTATUS_COMMON_OK) return (eSTATUS_COMMON_OK)){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_STATUS_BREAK}(rc)\~ \{if ((rc) != eSTATUS_COMMON_OK) break;\}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GET_MEMBER}(destination, ptr, member)\~ SAFE_OPERATION(VALIDATE_ARGUMENTS(ptr && destination); *destination = ptr->member; return eSTATUS_COMMON_OK;){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_MEMBER}(source, ptr, member)\~ SAFE_OPERATION(VALIDATE_ARGUMENTS(ptr); ptr->member = source; return eSTATUS_COMMON_OK;){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONSTRUCT}(pptr, module,...){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DESTRUCT}(pptr, module){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functional macros\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v CHECK\:Macros.h}
{\xe \v Macros.h\:CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK({\comment (startParameterList)}
rc)\~ SAFE_OPERATION(if ((s_lastStatus = rc) != eSTATUS_COMMON_OK) return (s_lastStatus)){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks return code and exits function if {\b not successfull}  {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rc} return code to be checked \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v CHECK_STATUS_BREAK\:Macros.h}
{\xe \v Macros.h\:CHECK_STATUS_BREAK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_STATUS_BREAK({\comment (startParameterList)}
rc)\~ \{if ((rc) != eSTATUS_COMMON_OK) break;\}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks return code and breaks a loop if not successfull {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rc} return code to be checked \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v CLEAR\:Macros.h}
{\xe \v Macros.h\:CLEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLEAR({\comment (startParameterList)}
var)\~ SAFE_OPERATION(memset(var, 0, sizeof(*var))){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zeroes a struct according to its size {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i var} variable to be cleared \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b CLEAR_ARRAY}, {\b NEW}, {\b DELETE} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v CLEAR_ARRAY\:Macros.h}
{\xe \v Macros.h\:CLEAR_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLEAR_ARRAY({\comment (startParameterList)}
var, {\comment (startParameterList)}
  size)\~ SAFE_OPERATION(memset(var, 0, sizeof(var[0]) * ARRAY_SIZE(size))){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zeroes an array {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i var} pointer to array to be cleared \par
{\i size} items count \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b CLEAR}, {\b NEW_ARRAY}, {\b DELETE} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v CONSTRUCT\:Macros.h}
{\xe \v Macros.h\:CONSTRUCT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONSTRUCT({\comment (startParameterList)}
pptr, {\comment (startParameterList)}
  module, {\comment (startParameterList)}
   {\i ...}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{\comment (startCodeFragment) }
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SAFE_OPERATION ( \\{\comment (lineBreak)}
\par
                                                                                                        VALIDATE_ARGUMENTS(pptr); \\{\comment (lineBreak)}
\par
                                                                                                        *pptr = NEW(module); \\{\comment (lineBreak)}
\par
                                                                                                        VALIDATE(*pptr, eSTATUS_COMMON_NO_MEMORY); \\{\comment (lineBreak)}
\par
                                                                                                        return module ## Init (*pptr, ## __VA_ARGS__); \\{\comment (lineBreak)}
\par
                                                                                                ){\comment (lineBreak)}
\par
{\comment (endCodeFragment) }
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes a structure, validating a pointer {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pptr} *pptr will be initialized with allocated structure \par
{\i module} data type to be allocated \par
{\i ...} additional parameters, provided to initializer \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b NEW} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v DELETE\:Macros.h}
{\xe \v Macros.h\:DELETE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DELETE({\comment (startParameterList)}
ptr)\~ SAFE_OPERATION(free(ptr); ptr = NULL){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees previousely allocated variable {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ptr} pointer to allocated variable \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b NEW}, {\b NEW_ARRAY}, {\b DESTRUCT} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v DESTRUCT\:Macros.h}
{\xe \v Macros.h\:DESTRUCT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DESTRUCT({\comment (startParameterList)}
pptr, {\comment (startParameterList)}
  module){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{\comment (startCodeFragment) }
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SAFE_OPERATION( \\{\comment (lineBreak)}
\par
                                                                                                        VALIDATE_ARGUMENTS(pptr && *pptr); \\{\comment (lineBreak)}
\par
                                                                                                        CHECK(module ## Destroy(*pptr)); \\{\comment (lineBreak)}
\par
                                                                                                        DELETE(*pptr); \\{\comment (lineBreak)}
\par
                                                                                                        return eSTATUS_COMMON_OK; \\{\comment (lineBreak)}
\par
                                                                                                ){\comment (lineBreak)}
\par
{\comment (endCodeFragment) }
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates a structure {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pptr} *pptr must point to valid structure \par
{\i module} module name \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v GET_MEMBER\:Macros.h}
{\xe \v Macros.h\:GET_MEMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_MEMBER({\comment (startParameterList)}
destination, {\comment (startParameterList)}
  ptr, {\comment (startParameterList)}
  member)\~ SAFE_OPERATION(VALIDATE_ARGUMENTS(ptr && destination); *destination = ptr->member; return eSTATUS_COMMON_OK;){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves structure member value, previously validating the pointers {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i destination} pointer to destination \par
{\i ptr} pointer to structure \par
{\i member} member name to be retrieved \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SET_MEMBER} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v NCHECK\:Macros.h}
{\xe \v Macros.h\:NCHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NCHECK({\comment (startParameterList)}
rc)\~ SAFE_OPERATION(if ((rc) == eSTATUS_COMMON_OK) return (eSTATUS_COMMON_OK)){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks return code and exits function if {\b successfull}  {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rc} return code to be checked \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v NEW\:Macros.h}
{\xe \v Macros.h\:NEW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NEW({\comment (startParameterList)}
type)\~ (type*)(malloc(sizeof(type))){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates a memory for a type according to its size {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i type} data type to be allocated \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b NEW_ARRAY}, {\b DELETE}, {\b CLEAR} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v NEW_ARRAY\:Macros.h}
{\xe \v Macros.h\:NEW_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NEW_ARRAY({\comment (startParameterList)}
type, {\comment (startParameterList)}
  size)\~ (type*)(malloc(ARRAY_BYTE_SIZE(type, size))){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates an array {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i type} item type \par
{\i size} items count \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b NEW}, {\b DELETE}, {\b CLEAR_ARRAY} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ROUND\:Macros.h}
{\xe \v Macros.h\:ROUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ROUND({\comment (startParameterList)}
val)\~ (long)((val) + 0.5){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts double value into rounded long {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i val} double value \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SAFE_OPERATION\:Macros.h}
{\xe \v Macros.h\:SAFE_OPERATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SAFE_OPERATION({\comment (startParameterList)}
operation)\~ do \{operation;\} while (0){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used in other macros in order to allow usage of macros inside if/else block {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i operation} Code block \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SET_MEMBER\:Macros.h}
{\xe \v Macros.h\:SET_MEMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_MEMBER({\comment (startParameterList)}
source, {\comment (startParameterList)}
  ptr, {\comment (startParameterList)}
  member)\~ SAFE_OPERATION(VALIDATE_ARGUMENTS(ptr); ptr->member = source; return eSTATUS_COMMON_OK;){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets structure member, previously validating a pointer {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i source} source value \par
{\i ptr} pointer to structure \par
{\i member} member name to be set \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b GET_MEMBER} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v VALIDATE\:Macros.h}
{\xe \v Macros.h\:VALIDATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VALIDATE({\comment (startParameterList)}
condition, {\comment (startParameterList)}
  error)\~ SAFE_OPERATION(if (!(condition)) return (error)){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks a condition and returns an error if a condition not satisfied {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i condition} boolean expression \par
{\i error} error code to be returned \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v VALIDATE_ARGUMENTS\:Macros.h}
{\xe \v Macros.h\:VALIDATE_ARGUMENTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VALIDATE_ARGUMENTS({\comment (startParameterList)}
condition)\~ VALIDATE(condition, eSTATUS_COMMON_INVALID_ARGUMENT){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks a condition and returns eSTATUS_COMMON_INVALID_ARGUMENT if a condition not satisfied {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i condition} boolean expression \par
}
}}
{\comment endFile}
{\comment end include _macros_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _message_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Message.h}
{\xe \v Message.h}
{\comment writeAnchor (_message_8h)}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "CommonTypes.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Message}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} declaration. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EMessageType} \{ {\b eMSG_TYPE_SEARCH_REQUEST}, 
{\b eMSG_TYPE_SEARCH_RESPONSE}, 
{\b eMSG_TYPE_DATA}, 
{\b eMSG_TYPE_ACK}, 
{\b eMSG_TYPE_LAST}
 \}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} type. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageNew} ({\b Message} **ppThis, {\b EMessageType} msgType, {\b StationId} srcId, {\b StationId} dstId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageNewData} ({\b Message} **ppThis, {\b StationId} srcId, {\b StationId} dstId, unsigned long size){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageNewSearchRequest} ({\b Message} **ppThis, {\b StationId} srcId, {\b StationId} lookForId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageNewSearchResponse} ({\b Message} **ppThis, {\b StationId} srcId, {\b StationId} dstId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageNewAck} ({\b Message} **ppThis, {\b StationId} srcId, {\b StationId} dstId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageInit} ({\b Message} *pThis, {\b EMessageType} msgType, {\b StationId} srcId, {\b StationId} dstId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageInitData} ({\b Message} *pThis, {\b StationId} srcId, {\b StationId} dstId, unsigned long size){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageInitSearchRequest} ({\b Message} *pThis, {\b StationId} srcId, {\b StationId} lookForId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageInitSearchResponse} ({\b Message} *pThis, {\b StationId} srcId, {\b StationId} dstId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageInitAck} ({\b Message} *pThis, {\b StationId} srcId, {\b StationId} dstId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageDelete} ({\b Message} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageDestroy} ({\b Message} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageCopy} ({\b Message} *pDst, const {\b Message} *pSrc){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b MessageClone} ({\b Message} **ppDst, const {\b Message} *pSrc){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} unit\par
Represents a network message\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EMessageType\:Message.h}
{\xe \v Message.h\:EMessageType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b EMessageType}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Message} type. \par
}{\comment (startSimpleSect)}
{{{\b {\comment (newParagraph)}
\par
Enumerator: }}{\comment (newParagraph)}
\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\comment (writeDescItem) }
{\comment (startDescTable) }
{\xe \v eMSG_TYPE_SEARCH_REQUEST\:Message.h}
{\xe \v Message.h\:eMSG_TYPE_SEARCH_REQUEST}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eMSG_TYPE_SEARCH_REQUEST{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search request - sent via broadcast in order to locate a route. \par
}{\comment (endDescTableData) }
{\xe \v eMSG_TYPE_SEARCH_RESPONSE\:Message.h}
{\xe \v Message.h\:eMSG_TYPE_SEARCH_RESPONSE}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eMSG_TYPE_SEARCH_RESPONSE{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search response - response to search request. \par
}{\comment (endDescTableData) }
{\xe \v eMSG_TYPE_DATA\:Message.h}
{\xe \v Message.h\:eMSG_TYPE_DATA}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eMSG_TYPE_DATA{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data message. \par
}{\comment (endDescTableData) }
{\xe \v eMSG_TYPE_ACK\:Message.h}
{\xe \v Message.h\:eMSG_TYPE_ACK}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eMSG_TYPE_ACK{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acknowledgment message - response to data message. \par
}{\comment (endDescTableData) }
{\xe \v eMSG_TYPE_LAST\:Message.h}
{\xe \v Message.h\:eMSG_TYPE_LAST}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eMSG_TYPE_LAST{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Terminator item. \par
}{\comment (endDescTableData) }
{\comment (endDescTable)}
{\comment (endSimpleSect)}
}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageClone\:Message.h}
{\xe \v Message.h\:MessageClone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageClone ({\comment (startParameterList)}
{\b Message} ** {\i ppDst}, {\comment (startParameterList)}
  const {\b Message} * {\i pSrc}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clones (allocates and copies) a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppDst} [out] pointer to the cloned message will be stored at *ppDst \par
{\i pSrc} [in] source instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageCopy\:Message.h}
{\xe \v Message.h\:MessageCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageCopy ({\comment (startParameterList)}
{\b Message} * {\i pDst}, {\comment (startParameterList)}
  const {\b Message} * {\i pSrc}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pDst} [in] destination instance \par
{\i pSrc} [in] source instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageDelete\:Message.h}
{\xe \v Message.h\:MessageDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageDelete ({\comment (startParameterList)}
{\b Message} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageDestroy\:Message.h}
{\xe \v Message.h\:MessageDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageDestroy ({\comment (startParameterList)}
{\b Message} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageInit\:Message.h}
{\xe \v Message.h\:MessageInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageInit ({\comment (startParameterList)}
{\b Message} * {\i pThis}, {\comment (startParameterList)}
  {\b EMessageType} {\i msgType}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i msgType} [in] message type \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageInitAck\:Message.h}
{\xe \v Message.h\:MessageInitAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageInitAck ({\comment (startParameterList)}
{\b Message} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes ack message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageInitData\:Message.h}
{\xe \v Message.h\:MessageInitData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageInitData ({\comment (startParameterList)}
{\b Message} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}, {\comment (startParameterList)}
  unsigned long {\i size}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes data message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
{\i size} [in] size \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageInitSearchRequest\:Message.h}
{\xe \v Message.h\:MessageInitSearchRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageInitSearchRequest ({\comment (startParameterList)}
{\b Message} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i lookForId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes search request message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i srcId} [in] source id \par
{\i lookForId} [in] id of the station to look for \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageInitSearchResponse\:Message.h}
{\xe \v Message.h\:MessageInitSearchResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageInitSearchResponse ({\comment (startParameterList)}
{\b Message} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes search response message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageNew\:Message.h}
{\xe \v Message.h\:MessageNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageNew ({\comment (startParameterList)}
{\b Message} ** {\i ppThis}, {\comment (startParameterList)}
  {\b EMessageType} {\i msgType}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates new message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i msgType} [in] message type \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageNewAck\:Message.h}
{\xe \v Message.h\:MessageNewAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageNewAck ({\comment (startParameterList)}
{\b Message} ** {\i ppThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates ack message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in] pointer to new instance will be stored at *ppThis \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageNewData\:Message.h}
{\xe \v Message.h\:MessageNewData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageNewData ({\comment (startParameterList)}
{\b Message} ** {\i ppThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}, {\comment (startParameterList)}
  unsigned long {\i size}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates data message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
{\i size} [in] size \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageNewSearchRequest\:Message.h}
{\xe \v Message.h\:MessageNewSearchRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageNewSearchRequest ({\comment (startParameterList)}
{\b Message} ** {\i ppThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i lookForId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates search request message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i srcId} [in] source id \par
{\i lookForId} [in] id of the station to look for \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MessageNewSearchResponse\:Message.h}
{\xe \v Message.h\:MessageNewSearchResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} MessageNewSearchResponse ({\comment (startParameterList)}
{\b Message} ** {\i ppThis}, {\comment (startParameterList)}
  {\b StationId} {\i srcId}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates search response message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i srcId} [in] source id \par
{\i dstId} [in] destination id \par
}
}}
{\comment endFile}
{\comment end include _message_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _queue_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Queue.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Queue.h}
{\xe \v Queue.h}
{\comment writeAnchor (_queue_8h)}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "List.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _Queue {\b Queue}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration of Queue \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueueNew} ({\b Queue} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueueDelete} ({\b Queue} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueueInit} ({\b Queue} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueueDestroy} ({\b Queue} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueuePush} ({\b Queue} *pThis, void *pItem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueuePop} ({\b Queue} *pThis, void **ppItem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b QueuePeek} ({\b Queue} *pThis, void **ppItem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queue module\par
Represents generic queue data structure implementation based on List \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b List.h}, {\b SortedList.h}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 01/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueueDelete\:Queue.h}
{\xe \v Queue.h\:QueueDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueueDelete ({\comment (startParameterList)}
{\b Queue} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis should point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueueDestroy\:Queue.h}
{\xe \v Queue.h\:QueueDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueueDestroy ({\comment (startParameterList)}
{\b Queue} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance without deallocating {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueueInit\:Queue.h}
{\xe \v Queue.h\:QueueInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueueInit ({\comment (startParameterList)}
{\b Queue} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes previously allocated instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueueNew\:Queue.h}
{\xe \v Queue.h\:QueueNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueueNew ({\comment (startParameterList)}
{\b Queue} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes a new instance of Queue {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueuePeek\:Queue.h}
{\xe \v Queue.h\:QueuePeek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueuePeek ({\comment (startParameterList)}
{\b Queue} * {\i pThis}, {\comment (startParameterList)}
  void ** {\i ppItem}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves top item from the queue (without removing) {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppItem} [out] an item will be stored at *ppItem \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b QueuePop}, {\b QueuePush} \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueuePop\:Queue.h}
{\xe \v Queue.h\:QueuePop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueuePop ({\comment (startParameterList)}
{\b Queue} * {\i pThis}, {\comment (startParameterList)}
  void ** {\i ppItem}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves and removes top item from the queue {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppItem} [out] pointer to retrieved item will be stored at *ppItem \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v QueuePush\:Queue.h}
{\xe \v Queue.h\:QueuePush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} QueuePush ({\comment (startParameterList)}
{\b Queue} * {\i pThis}, {\comment (startParameterList)}
  void * {\i pItem}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds new item into the queue {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pItem} [in] pointer to abstract item \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b QueuePeek}, {\b QueuePush} \par
}}}
{\comment endFile}
{\comment end include _queue_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _routing_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Routing.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Routing.c}
{\xe \v Routing.c}
{\comment writeAnchor (_routing_8c)}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Routing.h"}{\comment (lineBreak)}
\par
{\f2 #include "Macros.h"}{\comment (lineBreak)}
\par
{\f2 #include "List.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingAddRoute} ({\b Routing} *pThis, {\b StationId} dstId, {\b StationId} transitId, unsigned length){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingNew} ({\b Routing} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingDelete} ({\b Routing} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingInit} ({\b Routing} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingDestroy} ({\b Routing} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingHandleMessage} ({\b Routing} *pThis, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingLookFor} ({\b Routing} *pThis, {\b StationId} dstId, {\b StationId} *pTransitId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingSynchronize} ({\b Routing} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2008 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 20/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingAddRoute\:Routing.c}
{\xe \v Routing.c\:RoutingAddRoute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingAddRoute ({\comment (startParameterList)}
{\b Routing} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}, {\comment (startParameterList)}
  {\b StationId} {\i transitId}, {\comment (startParameterList)}
  unsigned {\i length}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a route {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i dstId} [in] destination station id \par
{\i transitId} [in] adjacent transit station id \par
{\i length} [in] estimated route length \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingDelete\:Routing.c}
{\xe \v Routing.c\:RoutingDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingDelete ({\comment (startParameterList)}
{\b Routing} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis should point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingDestroy\:Routing.c}
{\xe \v Routing.c\:RoutingDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingDestroy ({\comment (startParameterList)}
{\b Routing} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingHandleMessage\:Routing.c}
{\xe \v Routing.c\:RoutingHandleMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingHandleMessage ({\comment (startParameterList)}
{\b Routing} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles a message. Updates a routing table according to information found in a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingInit\:Routing.c}
{\xe \v Routing.c\:RoutingInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingInit ({\comment (startParameterList)}
{\b Routing} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingLookFor\:Routing.c}
{\xe \v Routing.c\:RoutingLookFor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingLookFor ({\comment (startParameterList)}
{\b Routing} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}, {\comment (startParameterList)}
  {\b StationId} * {\i pTransitId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Looks for a route to destination id {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i dstId} [in] destination station id \par
{\i pTransitId} [out] transit station id will be stored in *pTransitId \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid eSTATUS_COMMON_OK if the route was found and *pTransit was filled with valid station id \par
eSTATUS_LIST_NOT_FOUND if the route was not found \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingNew\:Routing.c}
{\xe \v Routing.c\:RoutingNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingNew ({\comment (startParameterList)}
{\b Routing} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates & initializes a new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingSynchronize\:Routing.c}
{\xe \v Routing.c\:RoutingSynchronize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingSynchronize ({\comment (startParameterList)}
{\b Routing} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronizes a routing table with current time Actually removes expired entries {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment endFile}
{\comment end include _routing_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _routing_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Routing.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Routing.h}
{\xe \v Routing.h}
{\comment writeAnchor (_routing_8h)}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "CommonTypes.h"}{\comment (lineBreak)}
\par
{\f2 #include "Message.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _Routing {\b Routing}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingNew} ({\b Routing} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingDelete} ({\b Routing} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingInit} ({\b Routing} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingDestroy} ({\b Routing} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingHandleMessage} ({\b Routing} *pThis, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingLookFor} ({\b Routing} *pThis, {\b StationId} dstId, {\b StationId} *pTransitId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b RoutingSynchronize} ({\b Routing} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2008 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 20/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid denis \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingDelete\:Routing.h}
{\xe \v Routing.h\:RoutingDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingDelete ({\comment (startParameterList)}
{\b Routing} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis should point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingDestroy\:Routing.h}
{\xe \v Routing.h\:RoutingDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingDestroy ({\comment (startParameterList)}
{\b Routing} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingHandleMessage\:Routing.h}
{\xe \v Routing.h\:RoutingHandleMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingHandleMessage ({\comment (startParameterList)}
{\b Routing} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles a message. Updates a routing table according to information found in a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingInit\:Routing.h}
{\xe \v Routing.h\:RoutingInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingInit ({\comment (startParameterList)}
{\b Routing} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingLookFor\:Routing.h}
{\xe \v Routing.h\:RoutingLookFor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingLookFor ({\comment (startParameterList)}
{\b Routing} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i dstId}, {\comment (startParameterList)}
  {\b StationId} * {\i pTransitId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Looks for a route to destination id {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i dstId} [in] destination station id \par
{\i pTransitId} [out] transit station id will be stored in *pTransitId \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid eSTATUS_COMMON_OK if the route was found and *pTransit was filled with valid station id \par
eSTATUS_LIST_NOT_FOUND if the route was not found \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingNew\:Routing.h}
{\xe \v Routing.h\:RoutingNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingNew ({\comment (startParameterList)}
{\b Routing} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates & initializes a new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v RoutingSynchronize\:Routing.h}
{\xe \v Routing.h\:RoutingSynchronize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} RoutingSynchronize ({\comment (startParameterList)}
{\b Routing} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronizes a routing table with current time Actually removes expired entries {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment endFile}
{\comment end include _routing_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _scheduler_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Scheduler.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Scheduler.c}
{\xe \v Scheduler.c}
{\comment writeAnchor (_scheduler_8c)}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Scheduler.h"}{\comment (lineBreak)}
\par
{\f2 #include "SortedList.h"}{\comment (lineBreak)}
\par
{\f2 #include "Macros.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerNew} ({\b Scheduler} **ppThis, {\b TimeLine} *pTimeLine){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerDelete} ({\b Scheduler} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerInit} ({\b Scheduler} *pThis, {\b TimeLine} *pTimeLine){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerDestroy} ({\b Scheduler} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerPutMessage} ({\b Scheduler} *pThis, {\b Message} *pMessage, double time){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerGetMessage} ({\b Scheduler} *pThis, {\b Message} **ppMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2008 Denis Itskovich\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 22/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerDelete\:Scheduler.c}
{\xe \v Scheduler.c\:SchedulerDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerDelete ({\comment (startParameterList)}
{\b Scheduler} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerDestroy\:Scheduler.c}
{\xe \v Scheduler.c\:SchedulerDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerDestroy ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerGetMessage\:Scheduler.c}
{\xe \v Scheduler.c\:SchedulerGetMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerGetMessage ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} ** {\i ppMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves available message and removes it from queue {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppMessage} [out] pointer to message will be stored at *ppMessage \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid eSTATUS_SCHEDULER_NO_MESSAGES_AVAILABLE if there are no ready messages \par
eSTATUS_COMMON_OK if a message was retrieved \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerInit\:Scheduler.c}
{\xe \v Scheduler.c\:SchedulerInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerInit ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}, {\comment (startParameterList)}
  {\b TimeLine} * {\i pTimeLine}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pTimeLine} [in] pointer to valid TimeLine instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerNew\:Scheduler.c}
{\xe \v Scheduler.c\:SchedulerNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerNew ({\comment (startParameterList)}
{\b Scheduler} ** {\i ppThis}, {\comment (startParameterList)}
  {\b TimeLine} * {\i pTimeLine}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i pTimeLine} [in] pointer to valid TimeLine instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerPutMessage\:Scheduler.c}
{\xe \v Scheduler.c\:SchedulerPutMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerPutMessage ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}, {\comment (startParameterList)}
  double {\i time}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Schedules a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
{\i time} [in] time, when the message should be issued, in time units \par
}
}}
{\comment endFile}
{\comment end include _scheduler_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _scheduler_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Scheduler.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Scheduler.h}
{\xe \v Scheduler.h}
{\comment writeAnchor (_scheduler_8h)}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "Message.h"}{\comment (lineBreak)}
\par
{\f2 #include "TimeLine.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _Scheduler {\b Scheduler}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerNew} ({\b Scheduler} **ppThis, {\b TimeLine} *pTimeLine){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerDelete} ({\b Scheduler} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerInit} ({\b Scheduler} *pThis, {\b TimeLine} *pTimeLine){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerDestroy} ({\b Scheduler} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerPutMessage} ({\b Scheduler} *pThis, {\b Message} *pMessage, double time){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SchedulerGetMessage} ({\b Scheduler} *pThis, {\b Message} **ppMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2008 Denis Itskovich\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 22/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerDelete\:Scheduler.h}
{\xe \v Scheduler.h\:SchedulerDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerDelete ({\comment (startParameterList)}
{\b Scheduler} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerDestroy\:Scheduler.h}
{\xe \v Scheduler.h\:SchedulerDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerDestroy ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerGetMessage\:Scheduler.h}
{\xe \v Scheduler.h\:SchedulerGetMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerGetMessage ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} ** {\i ppMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves available message and removes it from queue {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppMessage} [out] pointer to message will be stored at *ppMessage \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid eSTATUS_SCHEDULER_NO_MESSAGES_AVAILABLE if there are no ready messages \par
eSTATUS_COMMON_OK if a message was retrieved \par
}}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerInit\:Scheduler.h}
{\xe \v Scheduler.h\:SchedulerInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerInit ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}, {\comment (startParameterList)}
  {\b TimeLine} * {\i pTimeLine}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pTimeLine} [in] pointer to valid TimeLine instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerNew\:Scheduler.h}
{\xe \v Scheduler.h\:SchedulerNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerNew ({\comment (startParameterList)}
{\b Scheduler} ** {\i ppThis}, {\comment (startParameterList)}
  {\b TimeLine} * {\i pTimeLine}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i pTimeLine} [in] pointer to valid TimeLine instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SchedulerPutMessage\:Scheduler.h}
{\xe \v Scheduler.h\:SchedulerPutMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SchedulerPutMessage ({\comment (startParameterList)}
{\b Scheduler} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}, {\comment (startParameterList)}
  double {\i time}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Schedules a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
{\i time} [in] time, when the message should be issued, in time units \par
}
}}
{\comment endFile}
{\comment end include _scheduler_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _settings_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Settings.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Settings.c}
{\xe \v Settings.c}
{\comment writeAnchor (_settings_8c)}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Settings.h"}{\comment (lineBreak)}
\par
{\f2 #include "Macros.h"}{\comment (lineBreak)}
\par
{\f2 #include <stdlib.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsNew} ({\b Settings} **ppThis, double coverage, unsigned dataRate, double routeTTL){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsDelete} ({\b Settings} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsInit} ({\b Settings} *pThis, double coverage, unsigned dataRate, double routeTTL){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsDestroy} ({\b Settings} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsGetTransmitTime} ({\b Settings} *pThis, {\b Message} *pMessage, double *pTime){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2009 Denis Itskovich\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 02/01/2009 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsDelete\:Settings.c}
{\xe \v Settings.c\:SettingsDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsDelete ({\comment (startParameterList)}
{\b Settings} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis should point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsDestroy\:Settings.c}
{\xe \v Settings.c\:SettingsDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsDestroy ({\comment (startParameterList)}
{\b Settings} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsGetTransmitTime\:Settings.c}
{\xe \v Settings.c\:SettingsGetTransmitTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsGetTransmitTime ({\comment (startParameterList)}
{\b Settings} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}, {\comment (startParameterList)}
  double * {\i pTime}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates transmit time {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
{\i pTime} [out] transmit time will be stored at *pTime \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsInit\:Settings.c}
{\xe \v Settings.c\:SettingsInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsInit ({\comment (startParameterList)}
{\b Settings} * {\i pThis}, {\comment (startParameterList)}
  double {\i coverage}, {\comment (startParameterList)}
  unsigned {\i dataRate}, {\comment (startParameterList)}
  double {\i routeTTL}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i coverage} [in] station coverage range, in length units \par
{\i dataRate} [in] data rate, in bits per time unit \par
{\i routeTTL} [in] routing entry time to live \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsNew\:Settings.c}
{\xe \v Settings.c\:SettingsNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsNew ({\comment (startParameterList)}
{\b Settings} ** {\i ppThis}, {\comment (startParameterList)}
  double {\i coverage}, {\comment (startParameterList)}
  unsigned {\i dataRate}, {\comment (startParameterList)}
  double {\i routeTTL}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] new instance will be stored at *ppThis \par
{\i coverage} [in] station coverage range, in length units \par
{\i dataRate} [in] data rate, in bits per time unit \par
{\i routeTTL} [in] routing entry time to live \par
}
}}
{\comment endFile}
{\comment end include _settings_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _settings_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Settings.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Settings.h}
{\xe \v Settings.h}
{\comment writeAnchor (_settings_8h)}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "Message.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _Settings {\b Settings}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsNew} ({\b Settings} **ppThis, double coverage, unsigned dataRate, double routeTTL){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsDelete} ({\b Settings} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsInit} ({\b Settings} *pThis, double coverage, unsigned dataRate, double routeTTL){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsDestroy} ({\b Settings} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SettingsGetTransmitTime} ({\b Settings} *pThis, {\b Message} *pMessage, double *pTime){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2008 Denis Itskovich\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 22/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsDelete\:Settings.h}
{\xe \v Settings.h\:SettingsDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsDelete ({\comment (startParameterList)}
{\b Settings} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis should point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsDestroy\:Settings.h}
{\xe \v Settings.h\:SettingsDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsDestroy ({\comment (startParameterList)}
{\b Settings} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsGetTransmitTime\:Settings.h}
{\xe \v Settings.h\:SettingsGetTransmitTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsGetTransmitTime ({\comment (startParameterList)}
{\b Settings} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}, {\comment (startParameterList)}
  double * {\i pTime}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates transmit time {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
{\i pTime} [out] transmit time will be stored at *pTime \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsInit\:Settings.h}
{\xe \v Settings.h\:SettingsInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsInit ({\comment (startParameterList)}
{\b Settings} * {\i pThis}, {\comment (startParameterList)}
  double {\i coverage}, {\comment (startParameterList)}
  unsigned {\i dataRate}, {\comment (startParameterList)}
  double {\i routeTTL}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i coverage} [in] station coverage range, in length units \par
{\i dataRate} [in] data rate, in bits per time unit \par
{\i routeTTL} [in] routing entry time to live \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SettingsNew\:Settings.h}
{\xe \v Settings.h\:SettingsNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SettingsNew ({\comment (startParameterList)}
{\b Settings} ** {\i ppThis}, {\comment (startParameterList)}
  double {\i coverage}, {\comment (startParameterList)}
  unsigned {\i dataRate}, {\comment (startParameterList)}
  double {\i routeTTL}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] new instance will be stored at *ppThis \par
{\i coverage} [in] station coverage range, in length units \par
{\i dataRate} [in] data rate, in bits per time unit \par
{\i routeTTL} [in] routing entry time to live \par
}
}}
{\comment endFile}
{\comment end include _settings_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _simulator_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simulator.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Simulator.c}
{\xe \v Simulator.c}
{\comment writeAnchor (_simulator_8c)}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Simulator.h"}{\comment (lineBreak)}
\par
{\f2 #include "Station.h"}{\comment (lineBreak)}
\par
{\f2 #include "TimeLine.h"}{\comment (lineBreak)}
\par
{\f2 #include "Macros.h"}{\comment (lineBreak)}
\par
{\f2 #include "List.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorGetStation} ({\b Simulator} *pThis, {\b StationId} id, {\b Station} **ppStation){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorDispatchMessages} ({\b Simulator} *pThis, {\b Station} *pStation){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorNew} ({\b Simulator} **ppThis, {\b Settings} *pSettings){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorInit} ({\b Simulator} *pThis, {\b Settings} *pSettings){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorDelete} ({\b Simulator} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorDestroy} ({\b Simulator} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorAddStation} ({\b Simulator} *pThis, {\b Station} *pStation){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorProcess} ({\b Simulator} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 06/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorAddStation\:Simulator.c}
{\xe \v Simulator.c\:SimulatorAddStation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorAddStation ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}, {\comment (startParameterList)}
  {\b Station} * {\i pStation}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a station to simulator {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pStation} [in] pointer to station \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorDelete\:Simulator.c}
{\xe \v Simulator.c\:SimulatorDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorDelete ({\comment (startParameterList)}
{\b Simulator} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance of Simulator {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorDestroy\:Simulator.c}
{\xe \v Simulator.c\:SimulatorDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorDestroy ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorDispatchMessages\:Simulator.c}
{\xe \v Simulator.c\:SimulatorDispatchMessages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorDispatchMessages ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}, {\comment (startParameterList)}
  {\b Station} * {\i pStation}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dispatches outbound messages for specified station {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pStation} [in] pointer to station \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorGetStation\:Simulator.c}
{\xe \v Simulator.c\:SimulatorGetStation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorGetStation ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} {\i id}, {\comment (startParameterList)}
  {\b Station} ** {\i ppStation}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Looks for a station with specified id {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i id} [in] station id to look for \par
{\i ppStation} [out] pointer to station will be stored at *ppStation \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorInit\:Simulator.c}
{\xe \v Simulator.c\:SimulatorInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorInit ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}, {\comment (startParameterList)}
  {\b Settings} * {\i pSettings}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pSettings} [in] pointer to settings instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorNew\:Simulator.c}
{\xe \v Simulator.c\:SimulatorNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorNew ({\comment (startParameterList)}
{\b Simulator} ** {\i ppThis}, {\comment (startParameterList)}
  {\b Settings} * {\i pSettings}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance of Simulator {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i pSettings} [in] pointer to settings instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorProcess\:Simulator.c}
{\xe \v Simulator.c\:SimulatorProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorProcess ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs single simulation iteration {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment endFile}
{\comment end include _simulator_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _simulator_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Simulator.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Simulator.h}
{\xe \v Simulator.h}
{\comment writeAnchor (_simulator_8h)}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "Station.h"}{\comment (lineBreak)}
\par
{\f2 #include "Settings.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _Simulator {\b Simulator}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulator forward declaration. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorNew} ({\b Simulator} **ppThis, {\b Settings} *pSettings){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorDelete} ({\b Simulator} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorInit} ({\b Simulator} *pThis, {\b Settings} *pSettings){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorDestroy} ({\b Simulator} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorAddStation} ({\b Simulator} *pThis, {\b Station} *pStation){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SimulatorProcess} ({\b Simulator} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents WiFi Mesh Simulator\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 06/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorAddStation\:Simulator.h}
{\xe \v Simulator.h\:SimulatorAddStation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorAddStation ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}, {\comment (startParameterList)}
  {\b Station} * {\i pStation}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a station to simulator {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pStation} [in] pointer to station \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorDelete\:Simulator.h}
{\xe \v Simulator.h\:SimulatorDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorDelete ({\comment (startParameterList)}
{\b Simulator} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance of Simulator {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorDestroy\:Simulator.h}
{\xe \v Simulator.h\:SimulatorDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorDestroy ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorInit\:Simulator.h}
{\xe \v Simulator.h\:SimulatorInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorInit ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}, {\comment (startParameterList)}
  {\b Settings} * {\i pSettings}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pSettings} [in] pointer to settings instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorNew\:Simulator.h}
{\xe \v Simulator.h\:SimulatorNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorNew ({\comment (startParameterList)}
{\b Simulator} ** {\i ppThis}, {\comment (startParameterList)}
  {\b Settings} * {\i pSettings}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance of Simulator {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i pSettings} [in] pointer to settings instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SimulatorProcess\:Simulator.h}
{\xe \v Simulator.h\:SimulatorProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SimulatorProcess ({\comment (startParameterList)}
{\b Simulator} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs single simulation iteration {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment endFile}
{\comment end include _simulator_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _sorted_list_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SortedList.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v SortedList.c}
{\xe \v SortedList.c}
{\comment writeAnchor (_sorted_list_8c)}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "SortedList.h"}{\comment (lineBreak)}
\par
{\f2 #include "Macros.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListNew} ({\b SortedList} **ppThis, {\b ItemComparator} comparator, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListDelete} ({\b SortedList} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListInit} ({\b SortedList} *pThis, {\b ItemComparator} comparator, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListDestroy} ({\b SortedList} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListAdd} ({\b SortedList} *pThis, void *pValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListRemove} ({\b SortedList} *pThis, {\b ListEntry} *pEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetHead} ({\b SortedList} *pThis, {\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetTail} ({\b SortedList} *pThis, {\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetNext} ({\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetPrevious} ({\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetValue} ({\b ListEntry} *pEntry, void **ppValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Project: MeshCore (C) Copyright 2008 Denis Itskovich\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 22/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListAdd\:SortedList.c}
{\xe \v SortedList.c\:SortedListAdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListAdd ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  void * {\i pValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new item into the sorted list {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pValue} [in] pointer to new item \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListDelete\:SortedList.c}
{\xe \v SortedList.c\:SortedListDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListDelete ({\comment (startParameterList)}
{\b SortedList} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deallocates & destroys SortedList instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListDestroy\:SortedList.c}
{\xe \v SortedList.c\:SortedListDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListDestroy ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes an instance without deallocating {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetHead\:SortedList.c}
{\xe \v SortedList.c\:SortedListGetHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetHead ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the head {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] head entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetNext\:SortedList.c}
{\xe \v SortedList.c\:SortedListGetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetNext ({\comment (startParameterList)}
{\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the next to specified item {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppEntry} [in, out] next entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetPrevious\:SortedList.c}
{\xe \v SortedList.c\:SortedListGetPrevious}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetPrevious ({\comment (startParameterList)}
{\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the previous to specified item {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppEntry} [in, out] previous entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetTail\:SortedList.c}
{\xe \v SortedList.c\:SortedListGetTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetTail ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the tail {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] tail entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetValue\:SortedList.c}
{\xe \v SortedList.c\:SortedListGetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetValue ({\comment (startParameterList)}
{\b ListEntry} * {\i pEntry}, {\comment (startParameterList)}
  void ** {\i ppValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value by specified entry {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pEntry} [in] list entry \par
{\i ppValue} [out] value will be stored at *ppValue \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListInit\:SortedList.c}
{\xe \v SortedList.c\:SortedListInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListInit ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ItemComparator} {\i comparator}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes previously allocated instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i comparator} [in] pointer to comparison function \par
{\i pUserArg} [in] pointer to user-defined argument of comparison function \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListNew\:SortedList.c}
{\xe \v SortedList.c\:SortedListNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListNew ({\comment (startParameterList)}
{\b SortedList} ** {\i ppThis}, {\comment (startParameterList)}
  {\b ItemComparator} {\i comparator}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates & initializes new SortedList instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be placed at *ppThis \par
{\i comparator} [in] pointer to comparison function \par
{\i pUserArg} [in] pointer to user-defined argument of comparison function \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListRemove\:SortedList.c}
{\xe \v SortedList.c\:SortedListRemove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListRemove ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} * {\i pEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an item from the list {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pEntry} [in] pointer to entry, which should be removed \par
}
}}
{\comment endFile}
{\comment end include _sorted_list_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _sorted_list_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SortedList.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v SortedList.h}
{\xe \v SortedList.h}
{\comment writeAnchor (_sorted_list_8h)}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\f2 #include "List.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _SortedList {\b SortedList}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
forward declaration of SortedList \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListNew} ({\b SortedList} **ppThis, {\b ItemComparator} comparator, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListDelete} ({\b SortedList} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListInit} ({\b SortedList} *pThis, {\b ItemComparator} comparator, void *pUserArg){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListDestroy} ({\b SortedList} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListAdd} ({\b SortedList} *pThis, void *pValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListRemove} ({\b SortedList} *pThis, {\b ListEntry} *pEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetHead} ({\b SortedList} *pThis, {\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetTail} ({\b SortedList} *pThis, {\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetNext} ({\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetPrevious} ({\b ListEntry} **ppEntry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b SortedListGetValue} ({\b ListEntry} *pEntry, void **ppValue){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sorted Linked List module\par
Represents a sorted list \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b List.h}, {\b Queue.h}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 13/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListAdd\:SortedList.h}
{\xe \v SortedList.h\:SortedListAdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListAdd ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  void * {\i pValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new item into the sorted list {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pValue} [in] pointer to new item \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListDelete\:SortedList.h}
{\xe \v SortedList.h\:SortedListDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListDelete ({\comment (startParameterList)}
{\b SortedList} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deallocates & destroys SortedList instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListDestroy\:SortedList.h}
{\xe \v SortedList.h\:SortedListDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListDestroy ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes an instance without deallocating {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetHead\:SortedList.h}
{\xe \v SortedList.h\:SortedListGetHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetHead ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the head {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] head entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetNext\:SortedList.h}
{\xe \v SortedList.h\:SortedListGetNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetNext ({\comment (startParameterList)}
{\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the next to specified item {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppEntry} [in, out] next entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetPrevious\:SortedList.h}
{\xe \v SortedList.h\:SortedListGetPrevious}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetPrevious ({\comment (startParameterList)}
{\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the previous to specified item {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppEntry} [in, out] previous entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetTail\:SortedList.h}
{\xe \v SortedList.h\:SortedListGetTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetTail ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} ** {\i ppEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an entry of the tail {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppEntry} [out] tail entry will be stored in *ppEntry \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListGetValue\:SortedList.h}
{\xe \v SortedList.h\:SortedListGetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListGetValue ({\comment (startParameterList)}
{\b ListEntry} * {\i pEntry}, {\comment (startParameterList)}
  void ** {\i ppValue}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value by specified entry {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pEntry} [in] list entry \par
{\i ppValue} [out] value will be stored at *ppValue \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListInit\:SortedList.h}
{\xe \v SortedList.h\:SortedListInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListInit ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ItemComparator} {\i comparator}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes previously allocated instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i comparator} [in] pointer to comparison function \par
{\i pUserArg} [in] pointer to user-defined argument of comparison function \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListNew\:SortedList.h}
{\xe \v SortedList.h\:SortedListNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListNew ({\comment (startParameterList)}
{\b SortedList} ** {\i ppThis}, {\comment (startParameterList)}
  {\b ItemComparator} {\i comparator}, {\comment (startParameterList)}
  void * {\i pUserArg}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates & initializes new SortedList instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be placed at *ppThis \par
{\i comparator} [in] pointer to comparison function \par
{\i pUserArg} [in] pointer to user-defined argument of comparison function \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SortedListRemove\:SortedList.h}
{\xe \v SortedList.h\:SortedListRemove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} SortedListRemove ({\comment (startParameterList)}
{\b SortedList} * {\i pThis}, {\comment (startParameterList)}
  {\b ListEntry} * {\i pEntry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an item from the list {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pEntry} [in] pointer to entry, which should be removed \par
}
}}
{\comment endFile}
{\comment end include _sorted_list_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _station_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Station.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Station.h}
{\xe \v Station.h}
{\comment writeAnchor (_station_8h)}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CommonTypes.h"}{\comment (lineBreak)}
\par
{\f2 #include "Message.h"}{\comment (lineBreak)}
\par
{\f2 #include "Settings.h"}{\comment (lineBreak)}
\par
{\f2 #include "TimeLine.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _Station {\b Station}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Station forward declaration. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationNew} ({\b Station} **ppThis, {\b Velocity} velocity, {\b Location} location, {\b TimeLine} *pTimeLine, {\b Settings} *pSettings){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationDelete} ({\b Station} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationInit} ({\b Station} *pThis, {\b Velocity} velocity, {\b Location} location, {\b TimeLine} *pTimeLine, {\b Settings} *pSettings){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationDestroy} ({\b Station} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationSynchronize} ({\b Station} *pThis, double timeDelta){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationMoveTo} ({\b Station} *pThis, {\b Location} newLocation){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationGetId} (const {\b Station} *pThis, {\b StationId} *pId){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationGetMessage} ({\b Station} *pThis, {\b Message} **ppMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationPutMessage} ({\b Station} *pThis, {\b Message} *pMessage){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationIsAdjacent} (const {\b Station} *pThis, const {\b Station} *pStation, Boolean *pIsAdjacent){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b StationScheduleMessage} ({\b Station} *pThis, {\b Message} *pMessage, double time){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Station module\par
Represents a Station\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1/12/2008 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationDelete\:Station.h}
{\xe \v Station.h\:StationDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationDelete ({\comment (startParameterList)}
{\b Station} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis should point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationDestroy\:Station.h}
{\xe \v Station.h\:StationDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationDestroy ({\comment (startParameterList)}
{\b Station} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationGetId\:Station.h}
{\xe \v Station.h\:StationGetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationGetId ({\comment (startParameterList)}
const {\b Station} * {\i pThis}, {\comment (startParameterList)}
  {\b StationId} * {\i pId}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves a station id {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pId} [out] pointer to id \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationGetMessage\:Station.h}
{\xe \v Station.h\:StationGetMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationGetMessage ({\comment (startParameterList)}
{\b Station} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} ** {\i ppMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves next outgoing message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i ppMessage} [out] pointer to message will be stored at *ppMessage. NULL will be stored if no outgoing messages are available \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationInit\:Station.h}
{\xe \v Station.h\:StationInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationInit ({\comment (startParameterList)}
{\b Station} * {\i pThis}, {\comment (startParameterList)}
  {\b Velocity} {\i velocity}, {\comment (startParameterList)}
  {\b Location} {\i location}, {\comment (startParameterList)}
  {\b TimeLine} * {\i pTimeLine}, {\comment (startParameterList)}
  {\b Settings} * {\i pSettings}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance to initialize \par
{\i velocity} [in] station velocity vector \par
{\i location} [in] station location vector \par
{\i pTimeLine} [in] pointer to TimeLine instance \par
{\i pSettings} [in] pointer to simulation settings \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationIsAdjacent\:Station.h}
{\xe \v Station.h\:StationIsAdjacent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationIsAdjacent ({\comment (startParameterList)}
const {\b Station} * {\i pThis}, {\comment (startParameterList)}
  const {\b Station} * {\i pStation}, {\comment (startParameterList)}
  Boolean * {\i pIsAdjacent}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks whether a station is adjacent to another one {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pStation} [in] pointer to station to check \par
{\i pIsAdjacent} [out] result will be stored at *pIsAdjacent \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationMoveTo\:Station.h}
{\xe \v Station.h\:StationMoveTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationMoveTo ({\comment (startParameterList)}
{\b Station} * {\i pThis}, {\comment (startParameterList)}
  {\b Location} {\i newLocation}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves a station to new location {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i newLocation} [in] new location \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationNew\:Station.h}
{\xe \v Station.h\:StationNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationNew ({\comment (startParameterList)}
{\b Station} ** {\i ppThis}, {\comment (startParameterList)}
  {\b Velocity} {\i velocity}, {\comment (startParameterList)}
  {\b Location} {\i location}, {\comment (startParameterList)}
  {\b TimeLine} * {\i pTimeLine}, {\comment (startParameterList)}
  {\b Settings} * {\i pSettings}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes new instance {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
{\i velocity} [in] station velocity vector \par
{\i location} [in] station location vector \par
{\i pTimeLine} [in] pointer to TimeLine instance \par
{\i pSettings} [in] pointer to simulation settings \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationPutMessage\:Station.h}
{\xe \v Station.h\:StationPutMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationPutMessage ({\comment (startParameterList)}
{\b Station} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deliveries a message {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationScheduleMessage\:Station.h}
{\xe \v Station.h\:StationScheduleMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationScheduleMessage ({\comment (startParameterList)}
{\b Station} * {\i pThis}, {\comment (startParameterList)}
  {\b Message} * {\i pMessage}, {\comment (startParameterList)}
  double {\i time}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enqueues a message for delayed transmit {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pMessage} [in] pointer to message to be sent \par
{\i time} [in] time, when the message should be sent \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v StationSynchronize\:Station.h}
{\xe \v Station.h\:StationSynchronize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} StationSynchronize ({\comment (startParameterList)}
{\b Station} * {\i pThis}, {\comment (startParameterList)}
  double {\i timeDelta}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronizes a station with current time Moves the station {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i timeDelta} [in] time, passed since last update \par
}
}}
{\comment endFile}
{\comment end include _station_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _status_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Status.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Status.h}
{\xe \v Status.h}
{\comment writeAnchor (_status_8h)}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wchar.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EStatus} \{ {\b eSTATUS_COMMON_OK} =  0, 
{\b eSTATUS_COMMON_NO_MEMORY}, 
{\b eSTATUS_COMMON_INVALID_ARGUMENT}, 
{\b eSTATUS_LIST_INVALID_POSITION}, 
{\b eSTATUS_LIST_NOT_FOUND}, 
{\b eSTATUS_LIST_ENUMERATION_STOPPED}, 
{\b eSTATUS_QUEUE_EMPTY}, 
{\b eSTATUS_TIME_LINE_FINISHED}, 
{\b eSTATUS_SIMULATOR_STATION_NOT_FOUND}, 
{\b eSTATUS_SIMULATOR_FINISHED}, 
{\b eSTATUS_SCHEDULER_NO_MESSAGES}
 \}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global return codes. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines status return codes\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v EStatus\:Status.h}
{\xe \v Status.h\:EStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b EStatus}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global return codes. \par
}{\comment (startSimpleSect)}
{{{\b {\comment (newParagraph)}
\par
Enumerator: }}{\comment (newParagraph)}
\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\comment (writeDescItem) }
{\comment (startDescTable) }
{\xe \v eSTATUS_COMMON_OK\:Status.h}
{\xe \v Status.h\:eSTATUS_COMMON_OK}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_COMMON_OK{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Successful. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_COMMON_NO_MEMORY\:Status.h}
{\xe \v Status.h\:eSTATUS_COMMON_NO_MEMORY}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_COMMON_NO_MEMORY{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation failed due to memory shortage. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_COMMON_INVALID_ARGUMENT\:Status.h}
{\xe \v Status.h\:eSTATUS_COMMON_INVALID_ARGUMENT}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_COMMON_INVALID_ARGUMENT{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid argument provided {\i (usually NULL-pointer)} . \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_LIST_INVALID_POSITION\:Status.h}
{\xe \v Status.h\:eSTATUS_LIST_INVALID_POSITION}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_LIST_INVALID_POSITION{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid position provided. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_LIST_NOT_FOUND\:Status.h}
{\xe \v Status.h\:eSTATUS_LIST_NOT_FOUND}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_LIST_NOT_FOUND{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Item was not found. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_LIST_ENUMERATION_STOPPED\:Status.h}
{\xe \v Status.h\:eSTATUS_LIST_ENUMERATION_STOPPED}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_LIST_ENUMERATION_STOPPED{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration was stopped by enumerator. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_QUEUE_EMPTY\:Status.h}
{\xe \v Status.h\:eSTATUS_QUEUE_EMPTY}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_QUEUE_EMPTY{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to get an item from the empty queue. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_TIME_LINE_FINISHED\:Status.h}
{\xe \v Status.h\:eSTATUS_TIME_LINE_FINISHED}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_TIME_LINE_FINISHED{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Last event was reached. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_SIMULATOR_STATION_NOT_FOUND\:Status.h}
{\xe \v Status.h\:eSTATUS_SIMULATOR_STATION_NOT_FOUND}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_SIMULATOR_STATION_NOT_FOUND{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Referred station was not found. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_SIMULATOR_FINISHED\:Status.h}
{\xe \v Status.h\:eSTATUS_SIMULATOR_FINISHED}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_SIMULATOR_FINISHED{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulation finished. \par
}{\comment (endDescTableData) }
{\xe \v eSTATUS_SCHEDULER_NO_MESSAGES\:Status.h}
{\xe \v Status.h\:eSTATUS_SCHEDULER_NO_MESSAGES}
{\comment (startDescTableTitle) }
{\b {\i {\comment startDoxyAnchor}
eSTATUS_SCHEDULER_NO_MESSAGES{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{\comment (endDescTableTitle) }
}}  {\comment (startDescTableData) }
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No ready messages found. \par
}{\comment (endDescTableData) }
{\comment (endDescTable)}
{\comment (endSimpleSect)}
}
}
{\comment endFile}
{\comment end include _status_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_emboss)}
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include _time_line_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TimeLine.h File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v TimeLine.h}
{\xe \v TimeLine.h}
{\comment writeAnchor (_time_line_8h)}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Status.h"}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\comment startDoxyAnchor}

typedef struct _TimeLine {\b TimeLine}{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TimeLine forward declaration. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineNew} ({\b TimeLine} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineDelete} ({\b TimeLine} **ppThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineInit} ({\b TimeLine} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineDestroy} ({\b TimeLine} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineMilestone} ({\b TimeLine} *pThis, double time){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineRelativeMilestone} ({\b TimeLine} *pThis, double timeDelta){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineNext} ({\b TimeLine} *pThis){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EStatus} {\b TimeLineGetTime} ({\b TimeLine} *pThis, double *pTime){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TimeLine module\par
Represents a time line - events collection\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Denis Itskovich \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 12/12/2008 \par
}}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineDelete\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineDelete ({\comment (startParameterList)}
{\b TimeLine} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys and deallocates an instance of TimeLine {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [in, out] *ppThis must point to valid instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineDestroy\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineDestroy ({\comment (startParameterList)}
{\b TimeLine} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroys an instance of TimeLine {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineGetTime\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineGetTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineGetTime ({\comment (startParameterList)}
{\b TimeLine} * {\i pThis}, {\comment (startParameterList)}
  double * {\i pTime}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves current time {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i pTime} [out] current time will be stored at *pTime \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineInit\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineInit ({\comment (startParameterList)}
{\b TimeLine} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes an instance of TimeLine {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineMilestone\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineMilestone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineMilestone ({\comment (startParameterList)}
{\b TimeLine} * {\i pThis}, {\comment (startParameterList)}
  double {\i time}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new milestone to time line {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i time} [in] time of event, in time units \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineNew\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineNew ({\comment (startParameterList)}
{\b TimeLine} ** {\i ppThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates and initializes a new instance of TimeLine {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ppThis} [out] pointer to new instance will be stored at *ppThis \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineNext\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineNext ({\comment (startParameterList)}
{\b TimeLine} * {\i pThis}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Switches to next milestone {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
}
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v TimeLineRelativeMilestone\:TimeLine.h}
{\xe \v TimeLine.h\:TimeLineRelativeMilestone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EStatus} TimeLineRelativeMilestone ({\comment (startParameterList)}
{\b TimeLine} * {\i pThis}, {\comment (startParameterList)}
  double {\i timeDelta}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new relative milestone to time line {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pThis} [in] pointer to instance \par
{\i timeDelta} [in] delta time \par
}
}}
{\comment endFile}
{\comment end include _time_line_8h.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbknone
{\comment (rtfwriteRuler_thick)}
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
{\comment endFile}
}